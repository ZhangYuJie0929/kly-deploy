---
- name: copy lvm conf file
  copy:
    src: lvm.conf
    dest: /etc/lvm/lvm.conf

- name: 当share单独使用时创建lv挂载
  block:
    - name: 创建share的vg
      lvg:
        vg: "{{ local_share_vg_name }}"
        pvs: "{% for disk in share_device %}{{ disk }}{% if not loop.last %},{% endif %}{% endfor %}"
      when: local_share_vg_name not in ansible_lvm.vgs
    
    - name: 创建share的lv
      lvol:
        vg: "{{ local_share_vg_name }}"
        lv: "{{ local_net_lv_name }}"
        size: "{{ share_lv_size }}"
      when: local_net_lv_name not in ansible_lvm.lvs
    
    - name: 格式化share的lv
      filesystem:
        fstype: ext4
        dev: /dev/{{ local_share_vg_name }}/{{ local_net_lv_name }}
        force: true

    - name: 查看share lv的uuid
      shell: "blkid /dev/{{ local_share_vg_name }}/{{ local_net_lv_name }} | awk -F' ' '{print $2}'"
      register: share_lv_uuid

    - name: Mount trochilus logical volume
      mount:
        path: "{{ share_mount_dir }}"
        src: "{{ share_lv_uuid.stdout | replace('\"', '') }}"
        fstype: ext4
        state: mounted
      when: groups['glusterfs'] | length < 3
  when: 
    - share_device | length != 0
    - local_share_vg_name not in ansible_lvm.vgs

- name: 查看 vg 是否存在
  shell: "vgs | grep {{ local_vg_name }} | wc -l"
  register: vg_exist

- name: 生成创建命令
  set_fact:
    pv_volume: "{% for pv in local_device %} {{ pv }} {% if not loop.last %} {% endif %}{% endfor %}"
  when:
    - vg_exist.stdout == "0"
    - local_device | length >= 1

- name: 将系统盘的剩余空间分区
  block:
    - name: Get starting sector
      shell: "sudo parted {{ system_device }} unit s print free | awk '/Free Space/ {last=$1} END {print last}'"
      register: start_sector

    - name: Create data partition
      shell: "sudo parted -s {{ system_device }} mkpart primary ext4 {{ start_sector.stdout }} 100%"
      become: true

    - name: Get partition list
      shell: "ls {{ system_device }}*"
      register: partition_list

    - name: Determine last partition number
      set_fact:
        partition_num: "{{ partition_list.stdout_lines[-1][-1] }}"
      when: partition_list.stdout_lines | length > 0

    - name: Create data partition
      shell: "parted -s {{ system_device }} set {{ partition_num}} lvm on"
      when: partition_num is defined
      become: true

    - name: Generate creation command
      set_fact:
        pv_volume: "{{ system_device }}{{ partition_num }}"
      when: partition_num is defined
  when:
    - vg_exist.stdout == "0"
    - local_device | length == 0

- name: 创建 pv
  become: true
  shell: "pvcreate {{ pv_volume }}"
  when:
    - vg_exist.stdout == "0"

- name: 创建 vg
  become: true
  shell: "vgcreate {{ local_vg_name }} {{ pv_volume }}"
  when: 
    - vg_exist.stdout == "0"

- name: 当share不单独使用磁盘时创建vg
  block:
    - name: 查看 trochilus lv 卷是否创建
      shell: "lvs | grep {{ local_trochilus_lv_name }} | wc -l"
      register: trochilus_lv_exist

    - name: 创建 trochilus 逻辑卷
      become: true
      shell: "lvcreate -y -L {{ trochilus_lv_size }} -n {{ local_trochilus_lv_name }} {{ local_vg_name }}"
      when:
        - trochilus_lv_exist.stdout == "0"

    - name: 格式化 trochilus 逻辑卷
      shell: "mkfs.ext4 /dev/{{ local_vg_name }}/{{ local_trochilus_lv_name }}"
      when:
        - trochilus_lv_exist.stdout == "0"

    - name: cat trochilus UUID
      shell: "blkid | grep {{ local_vg_name }}-{{ local_trochilus_lv_name }} | awk -F' ' '{print $2}'"
      register: trochilus_uuid

    - name: Mount trochilus logical volume
      mount:
        path: "{{ desktop_mount_dir }}"
        src: "{{ trochilus_uuid.stdout | replace('\"', '') }}"
        fstype: ext4
        state: mounted
  when:
    - fsd_deploy_mode != "voi"
  
- name: 当share不单独使用磁盘时创建vg
  block:
    - name: 查看 net lv 卷是否创建
      shell: "lvs | grep {{ local_net_lv_name }} | wc -l"
      register: net_lv_exist

    - name: 创建 net 逻辑卷
      become: true
      shell: "lvcreate -y -L {{ share_lv_size }} -n {{ local_net_lv_name }} {{ local_vg_name }}"
      when:
        - net_lv_exist.stdout == "0"

    - name: 格式化 net 逻辑卷
      shell: "mkfs.ext4 /dev/{{ local_vg_name }}/{{ local_net_lv_name }}"
      when:
        - net_lv_exist.stdout == "0"

    - name: cat net UUID
      shell: "blkid | grep {{ local_vg_name }}-{{ local_net_lv_name }} | awk -F' ' '{print $2}'"
      register: net_uuid

    - name: Mount share net logical volume
      mount:
        path: "{{ share_mount_dir }}"
        src: "{{ net_uuid.stdout | replace('\"', '') }}"
        fstype: ext4
        state: mounted
      when: groups['glusterfs'] | length < 3
  when:
    - share_device | length == 0
    - local_net_lv_name not in ansible_lvm.lvs

- name: Apply role glusterfs
  import_role:
    name: glusterfs
  when: 
    - enable_glusterfs | bool
