node {
  name = "emqx@{{ 'api' | filter_address(inventory_hostname) }}"
  cookie = "emqxsecretcookie"
  data_dir = "data"
}
log {
  file_handlers.default {
    level = warning
    file = "log/emqx.log"
  }
}
cluster {
  name = emqxcl
  discovery_strategy = static
  static {
    seeds = [{% for host in groups['emqx'] %}emqx@{{ 'api' | filter_address(host) }}{% if not loop.last %},{% endif %}{% endfor %}]
  }
}
listeners.tcp.default {
  bind = "0.0.0.0:1883"
  max_connections = 1024000
}
listeners.ssl.default {
  bind = "0.0.0.0:8883"
  max_connections = 512000
  ssl_options {
    keyfile = "etc/certs/key.pem"
    certfile = "etc/certs/cert.pem"
    cacertfile = "etc/certs/cacert.pem"
  }
}
listeners.ws.default {
  bind = "0.0.0.0:8083"
  max_connections = 1024000
  websocket.mqtt_path = "/mqtt"
}
listeners.wss.default {
  bind = "0.0.0.0:8084"
  max_connections = 512000
  websocket.mqtt_path = "/mqtt"
  ssl_options {
    keyfile = "etc/certs/key.pem"
    certfile = "etc/certs/cert.pem"
    cacertfile = "etc/certs/cacert.pem"
  }
}
dashboard {
    listeners.http {
        bind = 18083
    }
    default_username = "admin"
    default_password = "public"
}
authorization {
  deny_action = ignore
  no_match = allow
  cache = { enable = true }
  sources =  [
    {
      type = file
      enable = true
      # This file is immutable to EMQX.
      # Once new rules are created from dashboard UI or HTTP API,
      # the file 'data/authz/acl.conf' is used instead of this one
      path = "etc/acl.conf"
    }
  ]
}
