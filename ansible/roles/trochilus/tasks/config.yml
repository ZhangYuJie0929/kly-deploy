---
- name: Ensuring trochilus config directories exist
  file:
    path: "{{ config_directory }}/trochilus"
    state: "directory"
    mode: "0775"
  become: true

- name: create trochilus databases
  mysql_db: 
    login_host: "{{ internal_vip_address }}"
    login_port: "{{ mariadb_listen_port }}"
    login_user: "{{ mariadb_root_username }}"
    login_password: "{{ mariadb_root_password }}"
    name: "{{ trochilus_mariadb_dataname }}"
    state: "present"
  run_once: True
  delegate_to: "{{ groups['trochilus-api'][0] }}"

- name: create trochilus databases user
  become: true
  mysql_user:
    login_host: "{{ internal_vip_address }}"
    login_port: "{{ mariadb_listen_port }}"
    login_user: "{{ mariadb_root_username }}"
    login_password: "{{ mariadb_root_password }}"
    name: "{{ trochilus_mariadb_username }}"
    password: "{{ trochilus_mariadb_password }}"
    host: "%"
    priv: "{{ trochilus_mariadb_dataname }}.*:ALL"
    append_privs: "yes"
  run_once: True
  delegate_to: "{{ groups['trochilus-api'][0] }}"

- name: set flat_physicals
  set_fact: 
    flat_physicals: >
      {% for flat_interface in flat_network_interface %}
      {{ 'flat' + loop.index | string }}
      {% if not loop.last %},{% endif %}
      {% endfor %}
  when:
    - trochilus_support_flat_network | bool

- name: set vlan_range
  set_fact: 
    vlan_range: >
      {% for vlan,vlan_ranges in vlan_network_interface.items() %}
      {% set index = loop.index %}
      {% for vlan_range in vlan_ranges %}
      {{ 'vlan' + index | string }}:{{ vlan_range }}
      {% if not loop.last %},{% endif %}
      {% endfor %}
      {% endfor %}
  when:
    - trochilus_support_vlan_network | bool

- name: set flat_interface_mappings
  set_fact:
    flat_interface_mappings: "{% for flat_interface in flat_network_interface %}{{ 'flat' + loop.index | string }}:{{ flat_interface }}{% if not loop.last %},{% endif %}{% endfor %}"
  when:
    - trochilus_support_flat_network | bool

- name: set vlan_interface_mappings
  set_fact:
    vlan_interface_mappings: "{% for vlan_interface,vlan_ranges in vlan_network_interface.items() %}{% set index = loop.index %}{{ 'vlan' + index | string }}:{{ vlan_interface }}{% if not loop.last %},{% endif %}{% endfor %}"
  when:
    - trochilus_support_vlan_network | bool

- name: set physical_interface_mappings
  set_fact:
    physical_interface_mappings: "{{ flat_interface_mappings }},{{ vlan_interface_mappings }}"

- name: copy trochilus conf file
  template:
    src: trochilus.conf.j2
    dest: "{{ config_directory }}/trochilus/trochilus.conf"

- name: Running exec trochilus-db-manage container
  vars:
    service_name: "trochilus-api"
    service: "{{ trochilus_services[service_name] }}"
  become: true
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    name: "trochilus-db-manage"
    command: "trochilus-db-manage upgrade head"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    restart_policy: no
    dimensions: "{{ service.dimensions }}"
    detach: False
  run_once: True
  delegate_to: "{{ groups['trochilus-api'][0] }}"

- name: create trochilus log file
  file:
    path: /var/log/trochilus
    state: "directory"
    mode: "0775"
  become: true
  notify: 
    - Restart trochilus-api container
    - Restart trochilus-agent container
    - Restart websockify container
