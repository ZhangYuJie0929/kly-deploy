---
- name: Ensure keepalived custom confirure file directory existing
  file:
    path: "{{ config_directory }}/keepalived/scripts/"
    state: "directory"
    mode: "0775"
  become: true

- name: Copy keepalived internal vip check script
  become: true
  copy:
    src: "check_haproxy_alive.sh"
    dest: "{{ config_directory }}/keepalived/scripts/check_script_internal.sh"
    mode: "0775"

- name: Copy keepalived external vip check script
  become: true
  copy:
    src: "check_haproxy_alive.sh"
    dest: "{{ config_directory }}/keepalived/scripts/check_script_external.sh"
    mode: "0775"

- name: Generate haproxy keepalived pass
  set_fact:
    haproxy_keepalived_pass: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters') }}"
  run_once: True

- name: set keepalived_internal_virtual_router_id
  set_fact:
    keepalived_internal_virtual_router_id: "{{ internal_vip_address.split('.')[-1] }}"

- name: Configure keepalived for internal VIP
  import_role:
    name: keepalived
  vars:
    service_name: "internal"
    service_hosts: "{{ groups['haproxy'] }}"
    vip_interface: "{{ api_interface }}"
    router_id: "{{ keepalived_internal_virtual_router_id }}"
    keepalived_action: "config-vip"
    vip_pass: "{{ haproxy_keepalived_pass }}"
    vip_address: "{{ internal_vip_address }}"

- name: set keepalived_external_virtual_router_id
  set_fact:
    keepalived_external_virtual_router_id: "{{ external_vip_address.split('.')[-1] }}"

- name: Configure keepalived for external VIP
  import_role:
    name: keepalived
  vars:
    service_name: "external"
    service_hosts: "{{ groups['haproxy'] }}"
    vip_interface: "{{ api_interface }}"
    router_id: "{{ keepalived_external_virtual_router_id }}"
    keepalived_action: "config-vip"
    vip_pass: "{{ haproxy_keepalived_pass }}"
    vip_address: "{{ external_vip_address }}"
