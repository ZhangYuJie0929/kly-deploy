---
- import_tasks: create_swap_file.yml
  when:
    - create_swap_file | bool

- import_tasks: create_mount_crontab.yml
  when:
    - enable_ceph | bool
    - not enable_local | bool

- import_tasks: create_bcache_script.yml
  when:
    - bcache | bool

- name: 获取 osd 数量
  shell: systemctl | grep running | grep osd@ | wc -l
  register: osd_num
  when:
    - enable_hugepages | bool

- name: 设置 iptables 命令
  shell: iptables -P FORWARD ACCEPT

- name: 获取可分配的大页数量
  set_fact:
    hugepages_total: >-
      {% if ansible_memtotal_mb >= 65536 %}{{ (ansible_memtotal_mb - reserved_osd_memory_mb * osd_num.stdout | int - reserved_mds_memory_mb - reserved_mon_memory_mb - reseverd_system_memory_mb - reserved_host_memory_mb) // 2 | int }}{% elif ansible_memtotal_mb >= 32768 %}8192{% elif ansible_memtotal_mb >= 16384 %}2048{% else %}1024{% endif %}
  when:
    - enable_hugepages | bool

- name: 复制开机执行脚本 reboot-script.sh
  template:
    src: reboot-script.sh.j2
    dest: "{{ config_directory }}/reboot-script.sh"
    mode: 755

- name: 设置开机启动 iptables 命令
  become: true
  template:
    src: iptables-accept.service.j2
    dest: /usr/lib/systemd/system/iptables-accept.service

- name: Reload systemctl and enable iptables-accept service
  become: true
  systemd:
    name: iptables-accept
    daemon_reload: true
    enabled: true

- import_tasks: log_rotate.yml

- import_tasks: create_cronjob.yml

- name: 复制 mariadb check 脚本
  become: true
  template:
    src: check_maraidb_status.sh.j2
    dest: "{{ config_directory }}/mariadb/check_maraidb_status.sh"
    mode: 755
  run_once: True
  delegate_to: localhost
  when:
    - groups['control'] | length > 1

- name: 设置开机启动 maraidb 命令
  become: true
  template:
    src: check_maraidb_status.service.j2
    dest: /usr/lib/systemd/system/check_maraidb_status.service
  run_once: True
  delegate_to: localhost
  when:
    - groups['control'] | length > 1

- name: Reload systemctl and enable check_maraidb_status service
  become: true
  systemd:
    name: check_maraidb_status
    daemon_reload: true
    enabled: true
  run_once: True
  delegate_to: localhost
  when:
    - groups['control'] | length > 1

- name: 创建定时任务,每天晚上2点清除系统缓存
  cron:
    name: "clean linux cache"
    hour: "2"
    job: "sync && echo 1 > /proc/sys/vm/drop_caches"
  when: inventory_hostname in groups["control"]
